/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Commitment, CommitmentInterface } from "../Commitment";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_data",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_groupId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_userId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_createdAt",
        type: "uint256",
      },
    ],
    name: "addCom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getComsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_metadta",
        type: "string",
      },
      {
        internalType: "address",
        name: "_mintAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "updateCom",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d5d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806344d2058c146100465780635ed2e53314610062578063bb71b84c14610092575b600080fd5b610060600480360381019061005b9190610a72565b6100ae565b005b61007c60048036038101906100779190610a49565b610266565b6040516100899190610ba8565b60405180910390f35b6100ac60048036038101906100a79190610b19565b6102b1565b005b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e0016040528088815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001868152602001878152602001604051806020016040528060008152508152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010190805190602001906101d89291906108c7565b50604082015181600201556060820151816003015560808201518160040190805190602001906102099291906108c7565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160060155505050505050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60006102bd838361034c565b905085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508160800181905250838160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050505050505050565b61035461094d565b600061035f84610266565b9050600061036c8561061e565b9050600080600090505b838110156103e157858382815181106103b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000015114156103ce578091505b80806103d990610c3b565b915050610376565b506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610458577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702016040518060e00160405290816000820154815260200160018201805461048b90610c09565b80601f01602080910402602001604051908101604052809291908181526020018280546104b790610c09565b80156105045780601f106104d957610100808354040283529160200191610504565b820191906000526020600020905b8154815290600101906020018083116104e757829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805461053190610c09565b80601f016020809104026020016040519081016040528092919081815260200182805461055d90610c09565b80156105aa5780601f1061057f576101008083540402835291602001916105aa565b820191906000526020600020905b81548152906001019060200180831161058d57829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682015481525050935050505092915050565b6060600061062b83610266565b905060005b818110156108c0576000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106106ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820180546106e190610c09565b80601f016020809104026020016040519081016040528092919081815260200182805461070d90610c09565b801561075a5780601f1061072f5761010080835404028352916020019161075a565b820191906000526020600020905b81548152906001019060200180831161073d57829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805461078790610c09565b80601f01602080910402602001604051908101604052809291908181526020018280546107b390610c09565b80156108005780601f106107d557610100808354040283529160200191610800565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820154815250508382815181106108a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525080806108b890610c3b565b915050610630565b5050919050565b8280546108d390610c09565b90600052602060002090601f0160209004810192826108f5576000855561093c565b82601f1061090e57805160ff191683800117855561093c565b8280016001018555821561093c579182015b8281111561093b578251825591602001919060010190610920565b5b50905061094991906109a3565b5090565b6040518060e001604052806000815260200160608152602001600081526020016000801916815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b5b808211156109bc5760008160009055506001016109a4565b5090565b6000813590506109cf81610ce2565b92915050565b6000813590506109e481610cf9565b92915050565b60008083601f8401126109fc57600080fd5b8235905067ffffffffffffffff811115610a1557600080fd5b602083019150836001820283011115610a2d57600080fd5b9250929050565b600081359050610a4381610d10565b92915050565b600060208284031215610a5b57600080fd5b6000610a69848285016109c0565b91505092915050565b600080600080600080600060c0888a031215610a8d57600080fd5b6000610a9b8a828b016109c0565b9750506020610aac8a828b01610a34565b9650506040610abd8a828b016109d5565b9550506060610ace8a828b01610a34565b945050608088013567ffffffffffffffff811115610aeb57600080fd5b610af78a828b016109ea565b935093505060a0610b0a8a828b01610a34565b91505092959891949750929550565b600080600080600060808688031215610b3157600080fd5b600086013567ffffffffffffffff811115610b4b57600080fd5b610b57888289016109ea565b95509550506020610b6a888289016109c0565b9350506040610b7b888289016109c0565b9250506060610b8c88828901610a34565b9150509295509295909350565b610ba281610bff565b82525050565b6000602082019050610bbd6000830184610b99565b92915050565b6000610bce82610bdf565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006002820490506001821680610c2157607f821691505b60208210811415610c3557610c34610cb3565b5b50919050565b6000610c4682610bff565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7957610c78610c84565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b610ceb81610bc3565b8114610cf657600080fd5b50565b610d0281610bd5565b8114610d0d57600080fd5b50565b610d1981610bff565b8114610d2457600080fd5b5056fea26469706673582212206f11c11ef3cd9f829cb42fe505435a0cce918948734da06705e164ba7890b2f964736f6c63430008040033";

type CommitmentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Commitment__factory extends ContractFactory {
  constructor(...args: CommitmentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Commitment> {
    return super.deploy(overrides || {}) as Promise<Commitment>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Commitment {
    return super.attach(address) as Commitment;
  }
  override connect(signer: Signer): Commitment__factory {
    return super.connect(signer) as Commitment__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentInterface {
    return new utils.Interface(_abi) as CommitmentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Commitment {
    return new Contract(address, _abi, signerOrProvider) as Commitment;
  }
}
