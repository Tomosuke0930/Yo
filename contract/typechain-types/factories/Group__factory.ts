/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Group, GroupInterface } from "../Group";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getGroup",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nullfier",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "criteria",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "attr_key",
            type: "string",
          },
        ],
        internalType: "struct IGroup.Group",
        name: "group",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "groupIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "groupNullfiers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "groups",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nullfier",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "criteria",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "attr_key",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nullfier",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "criteria",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "attr_key",
            type: "string",
          },
        ],
        internalType: "struct IGroup.Group[49]",
        name: "_groups",
        type: "tuple[49]",
      },
    ],
    name: "initialGroups",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "size",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f2a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631e19e08e146100675780634093d7a114610083578063949d225d146100b357806396324bd4146100d1578063ca00e4ed14610105578063ceb6065414610135575b600080fd5b610081600480360381019061007c9190610728565b610165565b005b61009d60048036038101906100989190610769565b610337565b6040516100aa91906108c1565b60405180910390f35b6100bb610352565b6040516100c891906108c1565b60405180910390f35b6100eb60048036038101906100e69190610769565b610357565b6040516100fc9594939291906108dc565b60405180910390f35b61011f600480360381019061011a9190610769565b6104a3565b60405161012c91906108c1565b60405180910390f35b61014f600480360381019061014a9190610769565b6104bf565b60405161015c919061089f565b60405180910390f35b60005b6031811015610333578181603181106101aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020028101906101ba9190610994565b600082603181106101f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6005020181816102049190610e82565b905050818160318110610240577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020028101906102509190610994565b6000013560f5826031811061028e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b01819055508181603181106102cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020028101906102dc9190610994565b60200135610126826031811061031b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0181905550808061032b90610c7a565b915050610168565b5050565b60f5816031811061034757600080fd5b016000915090505481565b603181565b6000816031811061036757600080fd5b6005020160009150905080600001549080600101549080600201805461038c90610c2c565b80601f01602080910402602001604051908101604052809291908181526020018280546103b890610c2c565b80156104055780601f106103da57610100808354040283529160200191610405565b820191906000526020600020905b8154815290600101906020018083116103e857829003601f168201915b50505050509080600301549080600401805461042090610c2c565b80601f016020809104026020016040519081016040528092919081815260200182805461044c90610c2c565b80156104995780601f1061046e57610100808354040283529160200191610499565b820191906000526020600020905b81548152906001019060200180831161047c57829003601f168201915b5050505050905085565b61012681603181106104b457600080fd5b016000915090505481565b6104c76106c6565b600080600090505b60318110156105325760f58160318110610512577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b015484141561051f578091505b808061052a90610c7a565b9150506104cf565b506000816031811061056d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600502016040518060a001604052908160008201548152602001600182015481526020016002820180546105a090610c2c565b80601f01602080910402602001604051908101604052809291908181526020018280546105cc90610c2c565b80156106195780601f106105ee57610100808354040283529160200191610619565b820191906000526020600020905b8154815290600101906020018083116105fc57829003601f168201915b505050505081526020016003820154815260200160048201805461063c90610c2c565b80601f016020809104026020016040519081016040528092919081815260200182805461066890610c2c565b80156106b55780601f1061068a576101008083540402835291602001916106b5565b820191906000526020600020905b81548152906001019060200180831161069857829003601f168201915b505050505081525050915050919050565b6040518060a0016040528060008152602001600081526020016060815260200160008152602001606081525090565b60008190508260206031028201111561070d57600080fd5b92915050565b60008135905061072281610ed8565b92915050565b60006020828403121561073a57600080fd5b600082013567ffffffffffffffff81111561075457600080fd5b610760848285016106f5565b91505092915050565b60006020828403121561077b57600080fd5b600061078984828501610713565b91505092915050565b600061079d826109d8565b6107a781856109e3565b93506107b7818560208601610b50565b6107c081610d8e565b840191505092915050565b60006107d6826109d8565b6107e081856109f4565b93506107f0818560208601610b50565b6107f981610d8e565b840191505092915050565b600060a08301600083015161081c6000860182610881565b50602083015161082f6020860182610881565b50604083015184820360408601526108478282610792565b915050606083015161085c6060860182610881565b50608083015184820360808601526108748282610792565b9150508091505092915050565b61088a81610a05565b82525050565b61089981610a05565b82525050565b600060208201905081810360008301526108b98184610804565b905092915050565b60006020820190506108d66000830184610890565b92915050565b600060a0820190506108f16000830188610890565b6108fe6020830187610890565b818103604083015261091081866107cb565b905061091f6060830185610890565b818103608083015261093181846107cb565b90509695505050505050565b6000808335600160200384360303811261095657600080fd5b80840192508235915067ffffffffffffffff82111561097457600080fd5b60208301925060018202360383131561098c57600080fd5b509250929050565b60008235600160a0038336030381126109ac57600080fd5b80830191505092915050565b60008190508160005260206000209050919050565b600082905092915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000819050919050565b5b81811015610a2e57610a23600082610dc6565b600181019050610a10565b5050565b6000610a3d82610a05565b9050919050565b610a4e83836109cd565b67ffffffffffffffff811115610a6757610a66610d3f565b5b610a718254610c2c565b600080601f8411601f84111715610a8e57610a8b856109b8565b90505b601f831115610ac1576020601f85010481016020851015610aad578190505b610abf6020601f860104830182610a0f565b505b601f841160018114610aee5760008515610adc578388013590505b610ae68682610c5e565b875550610b46565b601f1985168260005b82811015610b1c57858a01358255600182019150602086019550602081019050610af7565b87831015610b3957858a0135610b35601f8a1682610cc3565b8355505b6001600289020189555050505b5050505050505050565b60005b83811015610b6e578082015181840152602081019050610b53565b83811115610b7d576000848401525b50505050565b600081016000830180610b9581610d78565b9050610ba18184610e90565b505050600181016020830180610bb681610d78565b9050610bc28184610e90565b5050506002810160408301610bd7818561093d565b610be2818386610e72565b50505050600381016060830180610bf881610d78565b9050610c048184610e90565b5050506004810160808301610c19818561093d565b610c24818386610e72565b505050505050565b60006002820490506001821680610c4457607f821691505b60208210811415610c5857610c57610d10565b5b50919050565b6000610c6a8383610cc3565b9150826002028217905092915050565b6000610c8582610a05565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cb857610cb7610ce1565b5b600182019050919050565b6000610cd460001984600802610db9565b1980831691505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000819050919050565b60008135610d8581610ed8565b80915050919050565b6000601f19601f8301169050919050565b60008160001b9050919050565b600082821b905092915050565b600082821c905092915050565b610dce610eef565b610dd9818484610eb3565b505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610e0a84610d9f565b9350801983169250808416831791505092915050565b600060088302610e507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610dac565b610e5a8683610dac565b95508019841693508086168417925050509392505050565b610e7d838383610a44565b505050565b610e8c8282610b83565b5050565b610e9982610a32565b610eac610ea582610d6e565b8354610dde565b8255505050565b610ebc83610a32565b610ed0610ec882610d6e565b848454610e20565b825550505050565b610ee181610a05565b8114610eec57600080fd5b50565b60009056fea2646970667358221220fda1e6fd3ad7b2bea6013f2f379ad92f78f8399f2d72afa2a9882f476c52997e64736f6c63430008040033";

type GroupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Group__factory extends ContractFactory {
  constructor(...args: GroupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Group> {
    return super.deploy(overrides || {}) as Promise<Group>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Group {
    return super.attach(address) as Group;
  }
  override connect(signer: Signer): Group__factory {
    return super.connect(signer) as Group__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroupInterface {
    return new utils.Interface(_abi) as GroupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Group {
    return new Contract(address, _abi, signerOrProvider) as Group;
  }
}
