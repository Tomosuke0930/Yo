/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { YoV1, YoV1Interface } from "../../contracts/YoV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasurer",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "yoee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "counts",
        type: "uint256",
      },
    ],
    name: "Counts",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "frontendAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amounts",
        type: "uint256",
      },
    ],
    name: "PayFrontend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "yoee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "review",
        type: "uint256",
      },
    ],
    name: "Reviews",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_yoee",
        type: "address",
      },
    ],
    name: "getAverageReview",
    outputs: [
      {
        internalType: "uint256",
        name: "yoeeAverageReview",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "frontendAddress",
        type: "address",
      },
    ],
    name: "getClaimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "yoee",
        type: "address",
      },
    ],
    name: "getCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "yoeeCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "yoee",
        type: "address",
      },
    ],
    name: "getReview",
    outputs: [
      {
        internalType: "uint256",
        name: "yoeeReview",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sendToTreasure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_yoee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_review",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "frontendAddress",
        type: "address",
      },
    ],
    name: "yoTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040516200129538038062001295833981810160405281019061002791906100c3565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610135565b6000815190506100bd8161011e565b92915050565b6000602082840312156100d557600080fd5b60006100e3848285016100ae565b91505092915050565b60006100f7826100fe565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610127816100ec565b811461013257600080fd5b50565b61115080620001456000396000f3fe6080604052600436106100865760003560e01c8063694a34bb11610059578063694a34bb14610121578063c99ca4e61461015e578063d8d4d9491461017a578063e12f3a61146101b7578063f2fde38b146101f457610086565b806312065fe01461008b5780634b1006a3146100b65780634e71d92d146100cd5780635b467404146100e4575b600080fd5b34801561009757600080fd5b506100a061021d565b6040516100ad9190610daf565b60405180910390f35b3480156100c257600080fd5b506100cb610225565b005b3480156100d957600080fd5b506100e26102e7565b005b3480156100f057600080fd5b5061010b60048036038101906101069190610bc0565b610426565b6040516101189190610daf565b60405180910390f35b34801561012d57600080fd5b5061014860048036038101906101439190610bc0565b61046f565b6040516101559190610daf565b60405180910390f35b61017860048036038101906101739190610be9565b6104b8565b005b34801561018657600080fd5b506101a1600480360381019061019c9190610bc0565b6107a1565b6040516101ae9190610daf565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190610bc0565b6107d8565b6040516101eb9190610daf565b60405180910390f35b34801561020057600080fd5b5061021b60048036038101906102169190610bc0565b610835565b005b600047905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102aa90610d8f565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506102e4814761093f565b50565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161033357600080fd5b600061033e336107d8565b905061039281600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a6590919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103df338261093f565b803373ffffffffffffffffffffffffffffffffffffffff167f02500de0b71deed460e5dbdc41a8c712a64da5b24cac052ec3c59c82f79a05c560405160405180910390a350565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8234146104fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f190610d6f565b60405180910390fd5b60006105236064610515606287610a7b90919063ffffffff16565b610a9190919063ffffffff16565b905061052f858261093f565b600061053a86610426565b90506000610552600183610aa790919063ffffffff16565b9050600061055f8861046f565b905060006105768783610aa790919063ffffffff16565b90506105ca88600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610aa790919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff167f656446e16ed9e2020adb78814b1c43f614cbfd6e1ebe077c12b600f671c7d236826040516106db9190610daf565b60405180910390a28873ffffffffffffffffffffffffffffffffffffffff167f63ed0ebad3199e15c1e99d01745fd6269ca3e8a99d617c04916f7d8dc10adeae846040516107299190610daf565b60405180910390a28873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8a60405161078e9190610daf565b60405180910390a3505050505050505050565b6000806107ad83610426565b905060006107ba8461046f565b90506107cf8282610a9190919063ffffffff16565b92505050919050565b600061082e6103e8600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a9190919063ffffffff16565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ba90610d8f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a90610d2f565b60405180910390fd5b61093c81610abd565b50565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff81111561099a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156109cc5781602001600182028036833780820191505090505b506040516109da9190610d18565b60006040518083038185875af1925050503d8060008114610a17576040519150601f19603f3d011682016040523d82523d6000602084013e610a1c565b606091505b5050905080610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5790610d4f565b60405180910390fd5b505050565b60008183610a739190610ed2565b905092915050565b60008183610a899190610e78565b905092915050565b60008183610a9f9190610e47565b905092915050565b60008183610ab59190610df1565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610b90816110d5565b92915050565b600081359050610ba5816110ec565b92915050565b600081359050610bba81611103565b92915050565b600060208284031215610bd257600080fd5b6000610be084828501610b81565b91505092915050565b60008060008060808587031215610bff57600080fd5b6000610c0d87828801610b96565b9450506020610c1e87828801610bab565b9350506040610c2f87828801610bab565b9250506060610c4087828801610b96565b91505092959194509250565b6000610c5782610dca565b610c618185610dd5565b9350610c71818560208601610f54565b80840191505092915050565b6000610c8a602683610de0565b9150610c9582610fe5565b604082019050919050565b6000610cad600383610de0565b9150610cb882611034565b602082019050919050565b6000610cd0602683610de0565b9150610cdb8261105d565b604082019050919050565b6000610cf3602083610de0565b9150610cfe826110ac565b602082019050919050565b610d1281610f4a565b82525050565b6000610d248284610c4c565b915081905092915050565b60006020820190508181036000830152610d4881610c7d565b9050919050565b60006020820190508181036000830152610d6881610ca0565b9050919050565b60006020820190508181036000830152610d8881610cc3565b9050919050565b60006020820190508181036000830152610da881610ce6565b9050919050565b6000602082019050610dc46000830184610d09565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610dfc82610f4a565b9150610e0783610f4a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3c57610e3b610f87565b5b828201905092915050565b6000610e5282610f4a565b9150610e5d83610f4a565b925082610e6d57610e6c610fb6565b5b828204905092915050565b6000610e8382610f4a565b9150610e8e83610f4a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ec757610ec6610f87565b5b828202905092915050565b6000610edd82610f4a565b9150610ee883610f4a565b925082821015610efb57610efa610f87565b5b828203905092915050565b6000610f1182610f2a565b9050919050565b6000610f2382610f2a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610f72578082015181840152602081019050610f57565b83811115610f81576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5354450000000000000000000000000000000000000000000000000000000000600082015250565b7f4e6f742073617665207472616e7366657220616d6f756e7420616e64206d736760008201527f2e76616c75650000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6110de81610f06565b81146110e957600080fd5b50565b6110f581610f18565b811461110057600080fd5b50565b61110c81610f4a565b811461111757600080fd5b5056fea26469706673582212208b0d98465863e5ab097e861781174b5d2fe58b4f95a5f1509c813fc88be3039864736f6c63430008040033";

type YoV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YoV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YoV1__factory extends ContractFactory {
  constructor(...args: YoV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasurer: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<YoV1> {
    return super.deploy(_treasurer, overrides || {}) as Promise<YoV1>;
  }
  override getDeployTransaction(
    _treasurer: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasurer, overrides || {});
  }
  override attach(address: string): YoV1 {
    return super.attach(address) as YoV1;
  }
  override connect(signer: Signer): YoV1__factory {
    return super.connect(signer) as YoV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YoV1Interface {
    return new utils.Interface(_abi) as YoV1Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): YoV1 {
    return new Contract(address, _abi, signerOrProvider) as YoV1;
  }
}
