/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC1238,
  ERC1238Interface,
} from "../../../../contracts/interface/ERC1238/ERC1238";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "burner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "BurnBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "burner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BurnSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "MintBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MintSingle",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[][]",
        name: "ids",
        type: "uint256[][]",
      },
    ],
    name: "balanceOfBundle",
    outputs: [
      {
        internalType: "uint256[][]",
        name: "",
        type: "uint256[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001648380380620016488339818101604052810190620000379190620002a8565b600060405180608001604052806040518060400160405280601581526020017f45524331323338204d696e7420417070726f76616c000000000000000000000081525081526020016040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081526020014681526020013073ffffffffffffffffffffffffffffffffffffffff1681525090507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f816000015180519060200120826020015180519060200120836040015184606001516040516020016200013595949392919062000320565b604051602081830303815290604052805190602001206000819055505062000163816200016a60201b60201c565b5062000535565b80600290805190602001906200018292919062000186565b5050565b82805462000194906200045a565b90600052602060002090601f016020900481019282620001b8576000855562000204565b82601f10620001d357805160ff191683800117855562000204565b8280016001018555821562000204579182015b8281111562000203578251825591602001919060010190620001e6565b5b50905062000213919062000217565b5090565b5b808211156200023257600081600090555060010162000218565b5090565b60006200024d6200024784620003a6565b6200037d565b9050828152602081018484840111156200026657600080fd5b6200027384828562000424565b509392505050565b600082601f8301126200028d57600080fd5b81516200029f84826020860162000236565b91505092915050565b600060208284031215620002bb57600080fd5b600082015167ffffffffffffffff811115620002d657600080fd5b620002e4848285016200027b565b91505092915050565b620002f881620003dc565b82525050565b6200030981620003f0565b82525050565b6200031a816200041a565b82525050565b600060a082019050620003376000830188620002fe565b620003466020830187620002fe565b620003556040830186620002fe565b6200036460608301856200030f565b620003736080830184620002ed565b9695505050505050565b6000620003896200039c565b905062000397828262000490565b919050565b6000604051905090565b600067ffffffffffffffff821115620003c457620003c3620004f5565b5b620003cf8262000524565b9050602081019050919050565b6000620003e982620003fa565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156200044457808201518184015260208101905062000427565b8381111562000454576000848401525b50505050565b600060028204905060018216806200047357607f821691505b602082108114156200048a5762000489620004c6565b5b50919050565b6200049b8262000524565b810181811067ffffffffffffffff82111715620004bd57620004bc620004f5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61110380620005456000396000f3fe608060405234801561001057600080fd5b50600436106100615760003560e01c8062fdd58e1461006657806301ffc9a7146100965780633644e515146100c6578063a7bb5803146100e4578063afd6908614610116578063dbee152414610146575b600080fd5b610080600480360381019061007b9190610913565b610176565b60405161008d9190610d04565b60405180910390f35b6100b060048036038101906100ab91906109bb565b610240565b6040516100bd9190610c57565b60405180910390f35b6100ce6102ba565b6040516100db9190610c72565b60405180910390f35b6100fe60048036038101906100f991906109e4565b6102c0565b60405161010d93929190610c8d565b60405180910390f35b610130600480360381019061012b91906108bf565b610328565b60405161013d9190610c35565b60405180910390f35b610160600480360381019061015b919061094f565b61045b565b60405161016d9190610c13565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156101e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101de90610cc4565b60405180910390fd5b6001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f74c5502c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102b357506102b2826105d2565b5b9050919050565b60005481565b60008060006041845114610309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030090610ce4565b60405180910390fd5b6020840151925060408401519150606084015160001a90509193909250565b60606000825167ffffffffffffffff81111561036d577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561039b5781602001602082028036833780820191505090505b50905060008351905060005b8181101561044f576103f9868683815181106103ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610176565b838281518110610432577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508061044890610f58565b90506103a7565b50819250505092915050565b60606000835167ffffffffffffffff8111156104a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104d357816020015b60608152602001906001900390816104be5790505b50905060008451905060005b818110156105c657610571868281518110610523577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151868381518110610564577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610328565b8382815181106105aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250806105bf90610f58565b90506104df565b50819250505092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600061064f61064a84610d44565b610d1f565b9050808382526020820190508285602086028201111561066e57600080fd5b60005b8581101561069e578161068488826107d8565b845260208401935060208301925050600181019050610671565b5050509392505050565b60006106bb6106b684610d70565b610d1f565b905080838252602082019050828560208602820111156106da57600080fd5b60005b8581101561072457813567ffffffffffffffff8111156106fc57600080fd5b8086016107098982610841565b855260208501945060208401935050506001810190506106dd565b5050509392505050565b600061074161073c84610d9c565b610d1f565b9050808382526020820190508285602086028201111561076057600080fd5b60005b85811015610790578161077688826108aa565b845260208401935060208301925050600181019050610763565b5050509392505050565b60006107ad6107a884610dc8565b610d1f565b9050828152602081018484840111156107c557600080fd5b6107d0848285610f18565b509392505050565b6000813590506107e781611088565b92915050565b600082601f8301126107fe57600080fd5b813561080e84826020860161063c565b91505092915050565b600082601f83011261082857600080fd5b81356108388482602086016106a8565b91505092915050565b600082601f83011261085257600080fd5b813561086284826020860161072e565b91505092915050565b60008135905061087a8161109f565b92915050565b600082601f83011261089157600080fd5b81356108a184826020860161079a565b91505092915050565b6000813590506108b9816110b6565b92915050565b600080604083850312156108d257600080fd5b60006108e0858286016107d8565b925050602083013567ffffffffffffffff8111156108fd57600080fd5b61090985828601610841565b9150509250929050565b6000806040838503121561092657600080fd5b6000610934858286016107d8565b9250506020610945858286016108aa565b9150509250929050565b6000806040838503121561096257600080fd5b600083013567ffffffffffffffff81111561097c57600080fd5b610988858286016107ed565b925050602083013567ffffffffffffffff8111156109a557600080fd5b6109b185828601610817565b9150509250929050565b6000602082840312156109cd57600080fd5b60006109db8482850161086b565b91505092915050565b6000602082840312156109f657600080fd5b600082013567ffffffffffffffff811115610a1057600080fd5b610a1c84828501610880565b91505092915050565b6000610a318383610ac6565b905092915050565b6000610a458383610be6565b60208301905092915050565b6000610a5c82610e19565b610a668185610e49565b935083602082028501610a7885610df9565b8060005b85811015610ab45784840389528151610a958582610a25565b9450610aa083610e2f565b925060208a01995050600181019050610a7c565b50829750879550505050505092915050565b6000610ad182610e24565b610adb8185610e5a565b9350610ae683610e09565b8060005b83811015610b17578151610afe8882610a39565b9750610b0983610e3c565b925050600181019050610aea565b5085935050505092915050565b6000610b2f82610e24565b610b398185610e6b565b9350610b4483610e09565b8060005b83811015610b75578151610b5c8882610a39565b9750610b6783610e3c565b925050600181019050610b48565b5085935050505092915050565b610b8b81610e9f565b82525050565b610b9a81610eab565b82525050565b6000610bad602b83610e7c565b9150610bb882611010565b604082019050919050565b6000610bd0601883610e7c565b9150610bdb8261105f565b602082019050919050565b610bef81610f01565b82525050565b610bfe81610f01565b82525050565b610c0d81610f0b565b82525050565b60006020820190508181036000830152610c2d8184610a51565b905092915050565b60006020820190508181036000830152610c4f8184610b24565b905092915050565b6000602082019050610c6c6000830184610b82565b92915050565b6000602082019050610c876000830184610b91565b92915050565b6000606082019050610ca26000830186610b91565b610caf6020830185610b91565b610cbc6040830184610c04565b949350505050565b60006020820190508181036000830152610cdd81610ba0565b9050919050565b60006020820190508181036000830152610cfd81610bc3565b9050919050565b6000602082019050610d196000830184610bf5565b92915050565b6000610d29610d3a565b9050610d358282610f27565b919050565b6000604051905090565b600067ffffffffffffffff821115610d5f57610d5e610fd0565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610d8b57610d8a610fd0565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610db757610db6610fd0565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610de357610de2610fd0565b5b610dec82610fff565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e9882610ee1565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b610f3082610fff565b810181811067ffffffffffffffff82111715610f4f57610f4e610fd0565b5b80604052505050565b6000610f6382610f01565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f9657610f95610fa1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f455243313233383a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b61109181610e8d565b811461109c57600080fd5b50565b6110a881610eb5565b81146110b357600080fd5b50565b6110bf81610f01565b81146110ca57600080fd5b5056fea2646970667358221220a9c7934bc581a1af9a328b61bbe0614292785255ddab5be53fb2935b4f41335664736f6c63430008040033";

type ERC1238ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1238ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1238__factory extends ContractFactory {
  constructor(...args: ERC1238ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    baseURI_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1238> {
    return super.deploy(baseURI_, overrides || {}) as Promise<ERC1238>;
  }
  override getDeployTransaction(
    baseURI_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(baseURI_, overrides || {});
  }
  override attach(address: string): ERC1238 {
    return super.attach(address) as ERC1238;
  }
  override connect(signer: Signer): ERC1238__factory {
    return super.connect(signer) as ERC1238__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1238Interface {
    return new utils.Interface(_abi) as ERC1238Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1238 {
    return new Contract(address, _abi, signerOrProvider) as ERC1238;
  }
}
