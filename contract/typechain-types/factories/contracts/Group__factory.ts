/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Group, GroupInterface } from "../../contracts/Group";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getGroup",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nullifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "criteria",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "name",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "attr_key",
            type: "bytes32",
          },
        ],
        internalType: "struct IGroup.Group",
        name: "_group",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGroups",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nullifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "criteria",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "name",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "attr_key",
            type: "bytes32",
          },
        ],
        internalType: "struct IGroup.Group[49]",
        name: "_allGroups",
        type: "tuple[49]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "groupIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "groupNullfiers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "groups",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nullifier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "criteria",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "attr_key",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nullifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "criteria",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "name",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "attr_key",
            type: "bytes32",
          },
        ],
        internalType: "struct IGroup.Group[49]",
        name: "_groups",
        type: "tuple[49]",
      },
    ],
    name: "initialGroups",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "size",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b2a806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806396324bd41161005b57806396324bd4146100ec578063c72b517614610120578063ca00e4ed1461013e578063ceb606541461016e5761007d565b80633758fb6d146100825780634093d7a11461009e578063949d225d146100ce575b600080fd5b61009c600480360381019061009791906105d5565b61019e565b005b6100b860048036038101906100b391906105ff565b61034c565b6040516100c591906107da565b60405180910390f35b6100d6610367565b6040516100e391906107da565b60405180910390f35b610106600480360381019061010191906105ff565b61036c565b6040516101179594939291906107f5565b60405180910390f35b6101286103a8565b60405161013591906107a3565b60405180910390f35b610158600480360381019061015391906105ff565b61042c565b60405161016591906107da565b60405180910390f35b610188600480360381019061018391906105ff565b610448565b60405161019591906107bf565b60405180910390f35b60005b6031811015610348578181603181106101e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60a0020160008260318110610221577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6005020181816102319190610a95565b90505081816031811061026d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60a002016000013560f582603181106102af577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b01819055508181603181106102ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60a00201602001356101268260318110610330577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0181905550808061034090610956565b9150506101a1565b5050565b60f5816031811061035c57600080fd5b016000915090505481565b603181565b6000816031811061037c57600080fd5b600502016000915090508060000154908060010154908060020154908060030154908060040154905085565b6103b061053f565b6000603180602002604051908101604052809291906000905b82821015610423578382600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050815260200190600101906103c9565b50505050905090565b610126816031811061043d57600080fd5b016000915090505481565b61045061056d565b600080600090505b60318110156104bb5760f5816031811061049b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b01548414156104a8578091505b80806104b390610956565b915050610458565b50600081603181106104f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050915050919050565b6040518061062001604052806031905b61055761056d565b81526020019060019003908161054f5790505090565b6040518060a0016040528060008152602001600081526020016000815260200160008019168152602001600080191681525090565b60008190508260a0603102820111156105ba57600080fd5b92915050565b6000813590506105cf81610add565b92915050565b6000611ea082840312156105e857600080fd5b60006105f6848285016105a2565b91505092915050565b60006020828403121561061157600080fd5b600061061f848285016105c0565b91505092915050565b600061063483836106b5565b60a08301905092915050565b61064981610852565b610653818461086a565b925061065e82610848565b8060005b8381101561068f5781516106768782610628565b96506106818361085d565b925050600181019050610662565b505050505050565b6106a081610875565b82525050565b6106af81610875565b82525050565b60a0820160008201516106cb6000850182610785565b5060208201516106de6020850182610785565b5060408201516106f16040850182610785565b5060608201516107046060850182610697565b5060808201516107176080850182610697565b50505050565b60a0820160008201516107336000850182610785565b5060208201516107466020850182610785565b5060408201516107596040850182610785565b50606082015161076c6060850182610697565b50608082015161077f6080850182610697565b50505050565b61078e8161087f565b82525050565b61079d8161087f565b82525050565b6000611ea0820190506107b96000830184610640565b92915050565b600060a0820190506107d4600083018461071d565b92915050565b60006020820190506107ef6000830184610794565b92915050565b600060a08201905061080a6000830188610794565b6108176020830187610794565b6108246040830186610794565b61083160608301856106a6565b61083e60808301846106a6565b9695505050505050565b6000819050919050565b600060319050919050565b6000602082019050919050565b600081905092915050565b6000819050919050565b6000819050919050565b600061089482610875565b9050919050565b60006108a68261087f565b9050919050565b6000810160008301806108bf81610a00565b90506108cb8184610aa3565b5050506001810160208301806108e081610a00565b90506108ec8184610aa3565b50505060028101604083018061090181610a00565b905061090d8184610aa3565b505050600381016060830180610922816109ea565b905061092e8184610a72565b505050600481016080830180610943816109ea565b905061094f8184610a72565b5050505050565b60006109618261087f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109945761099361099f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d982610a23565b9050919050565b6000819050919050565b600081356109f781610ac6565b80915050919050565b60008135610a0d81610add565b80915050919050565b60008160001b9050919050565b60008160001c9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610a5c84610a16565b9350801983169250808416831791505092915050565b610a7b82610889565b610a8e610a87826109ce565b8354610a30565b8255505050565b610a9f82826108ad565b5050565b610aac8261089b565b610abf610ab8826109e0565b8354610a30565b8255505050565b610acf81610875565b8114610ada57600080fd5b50565b610ae68161087f565b8114610af157600080fd5b5056fea26469706673582212207b8d2e623d765dc2b9a685b31bab754dc42f6af93d27d99c8d5b8a8b91f803f064736f6c63430008040033";

type GroupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Group__factory extends ContractFactory {
  constructor(...args: GroupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Group> {
    return super.deploy(overrides || {}) as Promise<Group>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Group {
    return super.attach(address) as Group;
  }
  override connect(signer: Signer): Group__factory {
    return super.connect(signer) as Group__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroupInterface {
    return new utils.Interface(_abi) as GroupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Group {
    return new Contract(address, _abi, signerOrProvider) as Group;
  }
}
