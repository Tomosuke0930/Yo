/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { YoV1, YoV1Interface } from "../YoV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasurer",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "yoee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "counts",
        type: "uint256",
      },
    ],
    name: "Counts",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "yoee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "review",
        type: "uint256",
      },
    ],
    name: "Reviews",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_yoee",
        type: "address",
      },
    ],
    name: "getAverageReview",
    outputs: [
      {
        internalType: "uint256",
        name: "yoeeAverageReview",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "yoee",
        type: "address",
      },
    ],
    name: "getCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "yoeeCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "yoee",
        type: "address",
      },
    ],
    name: "getReview",
    outputs: [
      {
        internalType: "uint256",
        name: "yoeeReview",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sendToTreasure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_yoee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_review",
        type: "uint256",
      },
    ],
    name: "yoTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051610d8a380380610d8a833981810160405281019061002591906100c1565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610133565b6000815190506100bb8161011c565b92915050565b6000602082840312156100d357600080fd5b60006100e1848285016100ac565b91505092915050565b60006100f5826100fc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610125816100ea565b811461013057600080fd5b50565b610c48806101426000396000f3fe6080604052600436106100705760003560e01c8063694a34bb1161004e578063694a34bb146100f45780636e9cb57014610131578063d8d4d9491461014d578063f2fde38b1461018a57610070565b806312065fe0146100755780634b1006a3146100a05780635b467404146100b7575b600080fd5b34801561008157600080fd5b5061008a6101b3565b604051610097919061094d565b60405180910390f35b3480156100ac57600080fd5b506100b56101bb565b005b3480156100c357600080fd5b506100de60048036038101906100d991906107fd565b6102ba565b6040516100eb919061094d565b60405180910390f35b34801561010057600080fd5b5061011b600480360381019061011691906107fd565b610303565b604051610128919061094d565b60405180910390f35b61014b60048036038101906101469190610826565b61034c565b005b34801561015957600080fd5b50610174600480360381019061016f91906107fd565b6105c0565b604051610181919061094d565b60405180910390f35b34801561019657600080fd5b506101b160048036038101906101ac91906107fd565b6105f0565b005b600047905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610249576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102409061092d565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102b6573d6000803e3d6000fd5b5050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b81341461038e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103859061090d565b60405180910390fd5b6000606460623461039f9190610a00565b6103a991906109cf565b90508373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103f1573d6000803e3d6000fd5b5060006103fd856102ba565b9050600060018261040e9190610979565b9050600061041b87610303565b90506000858261042b9190610979565b905082600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508773ffffffffffffffffffffffffffffffffffffffff167f656446e16ed9e2020adb78814b1c43f614cbfd6e1ebe077c12b600f671c7d236826040516104fb919061094d565b60405180910390a28773ffffffffffffffffffffffffffffffffffffffff167f63ed0ebad3199e15c1e99d01745fd6269ca3e8a99d617c04916f7d8dc10adeae84604051610549919061094d565b60405180910390a28773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef896040516105ae919061094d565b60405180910390a35050505050505050565b6000806105cc836102ba565b905060006105d984610303565b905081816105e791906109cf565b92505050919050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461067e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106759061092d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e5906108ed565b60405180910390fd5b6106f7816106fa565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506107cd81610bcd565b92915050565b6000813590506107e281610be4565b92915050565b6000813590506107f781610bfb565b92915050565b60006020828403121561080f57600080fd5b600061081d848285016107be565b91505092915050565b60008060006060848603121561083b57600080fd5b6000610849868287016107d3565b935050602061085a868287016107e8565b925050604061086b868287016107e8565b9150509250925092565b6000610882602683610968565b915061088d82610b06565b604082019050919050565b60006108a5602683610968565b91506108b082610b55565b604082019050919050565b60006108c8602083610968565b91506108d382610ba4565b602082019050919050565b6108e781610a9e565b82525050565b6000602082019050818103600083015261090681610875565b9050919050565b6000602082019050818103600083015261092681610898565b9050919050565b60006020820190508181036000830152610946816108bb565b9050919050565b600060208201905061096260008301846108de565b92915050565b600082825260208201905092915050565b600061098482610a9e565b915061098f83610a9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109c4576109c3610aa8565b5b828201905092915050565b60006109da82610a9e565b91506109e583610a9e565b9250826109f5576109f4610ad7565b5b828204905092915050565b6000610a0b82610a9e565b9150610a1683610a9e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a4f57610a4e610aa8565b5b828202905092915050565b6000610a6582610a7e565b9050919050565b6000610a7782610a7e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f742073617665207472616e7366657220616d6f756e7420616e64206d736760008201527f2e76616c75650000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610bd681610a5a565b8114610be157600080fd5b50565b610bed81610a6c565b8114610bf857600080fd5b50565b610c0481610a9e565b8114610c0f57600080fd5b5056fea264697066735822122026514d8856782e67ad9408fa52b34eb795e37923911fe7751800850a4b47ab9364736f6c63430008040033";

type YoV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YoV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YoV1__factory extends ContractFactory {
  constructor(...args: YoV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasurer: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<YoV1> {
    return super.deploy(_treasurer, overrides || {}) as Promise<YoV1>;
  }
  override getDeployTransaction(
    _treasurer: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasurer, overrides || {});
  }
  override attach(address: string): YoV1 {
    return super.attach(address) as YoV1;
  }
  override connect(signer: Signer): YoV1__factory {
    return super.connect(signer) as YoV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YoV1Interface {
    return new utils.Interface(_abi) as YoV1Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): YoV1 {
    return new Contract(address, _abi, signerOrProvider) as YoV1;
  }
}
